package com.mycompany.myapp;

import static com.codename1.ui.CN.*;
import com.codename1.io.Log;
import com.codename1.ui.Button;
import com.codename1.ui.Display;
import com.codename1.ui.FontImage;
import com.codename1.ui.Form;
import com.codename1.ui.Dialog;
import com.codename1.ui.Label;
import com.codename1.ui.animations.CommonTransitions;
import com.codename1.ui.layouts.BorderLayout;
import com.codename1.ui.layouts.BoxLayout;
import com.codename1.ui.layouts.FlowLayout;
import com.codename1.ui.layouts.LayeredLayout;
import com.codename1.ui.plaf.Border;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.codename1.ui.util.UITimer;
import java.io.IOException;
import com.codename1.ui.Toolbar;
import com.codename1.ui.*;
import com.codename1.ui.events.ActionEvent;
import com.codename1.ui.events.ActionListener;
import com.codename1.ui.layouts.*;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename One</a> for the purpose 
 * of building native mobile applications using Java.
 */
public class menu {

    private Form current;
    private Resources theme;
    private Container panel1, panel2, panel3, panel4, panel5, panelhour, panel6, panel7;
    private Label coffee, icedCoffee, tea, muffin, bagel, image, image2, image3, image4, image5, image6;
    private Button add, add2, add3, add4, add5, hours;
    private Image coffeePic, icedCoffePic, teaPic, muffinPic, bagelPic, schedule;


    public void init(Object context) {
        theme = UIManager.initFirstTheme("/theme");

        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true);

        // Pro only feature
        Log.bindCrashProtection(true);
    }
    
    public void start() {
        if(current != null){
            current.show();
            return;
        }
        Form hi = new Form("Menu", new BoxLayout(BoxLayout.Y_AXIS));
        Form hoursp = new Form("Working Hours", new BoxLayout(BoxLayout.Y_AXIS));
        panel1=new Container();
        panel2=new Container();
        panel3=new Container();
        panel4=new Container();
        panel5=new Container();
        panel6 = new Container();

        panel7 = new Container();
        panel7.setLayout(new FlowLayout());
        panelhour = new Container();
        coffee=new Label("Coffee");
        icedCoffee=new Label("Iced Coffee");
        tea=new Label("Tea");
        muffin=new Label("Muffin");
        bagel=new Label("Bagel");
        add=new Button(" + ");
        add2=new Button(" + ");
        add3=new Button(" + ");
        add4=new Button(" + ");
        add5=new Button(" + ");
        hours = new Button("Hours");
        panel1.setLayout(new BorderLayout());
        panel1.addComponent(BorderLayout.CENTER, coffee);
        panel1.addComponent(BorderLayout.EAST, add);
        panel2.setLayout(new BorderLayout());
        panel2.addComponent(BorderLayout.CENTER, icedCoffee);
        panel2.addComponent(BorderLayout.EAST, add2);
        panel3.setLayout(new BorderLayout());
        panel3.addComponent(BorderLayout.CENTER, tea);
        panel3.addComponent(BorderLayout.EAST, add3);
        panel4.setLayout(new BorderLayout());
        panel4.addComponent(BorderLayout.CENTER, muffin);
        panel4.addComponent(BorderLayout.EAST, add4);
        panel5.setLayout(new BorderLayout());
        panel5.addComponent(BorderLayout.CENTER, bagel);
        panel5.addComponent(BorderLayout.EAST, add5);
        panel6.setLayout(new BorderLayout());
        //panel7.setLayout(new BorderLayout());
        //panel7.addComponent(BorderLayout.SOUTH, panel6);
        panel5.addComponent(BorderLayout.SOUTH,panel6);
        //panel6.add(panel7);
        panel7.addComponent(hours);
        panelhour.setLayout(new BorderLayout());
        //panelhour.add()


        try
        {
            coffeePic=Image.createImage("/coffee.JPG");
            icedCoffePic=Image.createImage("/icedCoffee.jpg");
            teaPic=Image.createImage("/tea.jpg");
            muffinPic=Image.createImage("/muffin.jpg");
            bagelPic=Image.createImage("/bagel.jpg");
            schedule = Image.createImage("/schedule.jpg");
        }
        catch (IOException e1)
        {
            e1.printStackTrace();
        }
        image= new Label("IMAGE")
        {
            @Override
            public void paint(Graphics g)
            {
                g.drawImage(coffeePic,this.getX(),this.getY(),this.getWidth(),this.getHeight());
            }
        };
        image2= new Label("IMAGE")
        {
            @Override
            public void paint(Graphics g)
            {
                g.drawImage(icedCoffePic,this.getX(),this.getY(),this.getWidth(),this.getHeight());
            }
        };
        image3= new Label("IMAGE")
        {
            @Override
            public void paint(Graphics g)
            {
                g.drawImage(teaPic,this.getX(),this.getY(),this.getWidth(),this.getHeight());
            }
        };
        image4= new Label("IMAGE")
        {
            @Override
            public void paint(Graphics g)
            {
                g.drawImage(muffinPic,this.getX(),this.getY(),this.getWidth(),this.getHeight());
            }
        };
        image5= new Label("IMAGE")
        {
            @Override
            public void paint(Graphics g)
            {
                g.drawImage(bagelPic,this.getX(),this.getY(),this.getWidth(),this.getHeight());
            }
        };
        image6 = new Label("HOURS")
        {
            @Override
            public void paint(Graphics g){
                g.drawImage(schedule, this.getX(), this.getY(), this.getWidth(), this.getHeight());
            }
        };
        panel1.addComponent(BorderLayout.WEST, image);
        panel2.addComponent(BorderLayout.WEST, image2);
        panel3.addComponent(BorderLayout.WEST, image3);
        panel4.addComponent(BorderLayout.WEST, image4);
        panel5.addComponent(BorderLayout.WEST, image5);
        hi.addComponent(panel1);
        hi.addComponent(panel2);
        hi.addComponent(panel3);
        hi.addComponent(panel4);
        hi.addComponent(panel5);
        hi.addComponent(panel6);
        hi.show();
    }

    public void stop() {
        current = getCurrentForm();
        if(current instanceof Dialog) {
            ((Dialog)current).dispose();
            current = getCurrentForm();
        }
    }


    
    public void destroy() {
    }

}
