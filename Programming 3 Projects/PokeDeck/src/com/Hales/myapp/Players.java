package com.Hales.myapp;

import com.codename1.io.Log;
import com.codename1.ui.*;
import com.codename1.ui.animations.CommonTransitions;
import com.codename1.ui.events.ActionEvent;
import com.codename1.ui.events.ActionListener;
import com.codename1.ui.layouts.*;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.codename1.ui.util.UITimer;
import java.io.IOException;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename One</a> for the purpose 
 * of building native mobile applications using Java.
 */
public class Players {

    private Form current;
    private Resources theme;
    private Label first , last ,img;
    private TextField txtFirst,txtLast;
    private Button forward,back,search;
    private Peep[] team;
    private Container panela,panelb,panelba,panelbb;
    private int x;
    private Image milton;


    public void init(Object context) {
        theme = UIManager.initFirstTheme("/theme");

        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true);

        // Pro only feature, uncomment if you have a pro subscription
        // Log.bindCrashProtection(true);
    }
    
    public void start() {
        if(current != null){
            current.show();
            return;
        }
        Form hi = new Form("Pokedex", new BorderLayout(BorderLayout.CENTER_BEHAVIOR_CENTER_ABSOLUTE));
        team= new Peep[10];



        panela=new Container();
        panelb=new Container();
        panelba=new Container();
        panelbb=new Container();

        try {
            milton= Image.createImage("/pokedex.png");
        } catch (IOException e1) {
            e1.printStackTrace();
        }

        img= new Label("PIC"){
                    @Override
                    public void paint(Graphics g) {
                        // red color
                        //  g.setColor(0xff0000);
                        g.drawImage(milton,this.getX(),this.getY(),75,75);
                        g.drawString("Hales", 10,10);

                        // paint the screen in red
                        // g.fillRect(getX(), getY(), 20,20);

                        // draw hi world in white text at the top left corner of the screen
                        //  g.setColor(0xFF9933);
                        //if(x>0) {
                         //   g.drawString(team[0].first, (this.getWidth()), getY() + this.getHeight());
                       // }
            }
        };
        Toolbar tb = hi.getToolbar();
        //Image icon = theme.getImage("pokedex");
        Container topBar = BorderLayout.center(img);
        topBar.add(BorderLayout.SOUTH,new Label("PokÃ©dex"));
        topBar.setUIID("SideCommand");
        tb.addComponentToSideMenu(topBar);
        tb.addMaterialCommandToSideMenu("Full Pokedex", FontImage.MATERIAL_CHECK, e ->{});
        first= new Label("NAME");
        //last= new Label("LAST");



        txtFirst = new TextField((""));
        txtLast = new TextField("");
        forward= new Button(("FORWARD"));
        back = new Button ("BACK");
        search = new Button ("Search");
        //make= new Button( "MAKE");
        panela.setLayout(new GridLayout(1,1));
        panela.add(first);
        panela.add(txtFirst);


        panelba.setLayout(new GridLayout(1,1));
        //panelba.add(img);
        //panelba.add(txtFirst);

        panelbb.setLayout(new GridLayout(1,3));
        panelbb.add(back);
        panelbb.add(search);
        panelbb.add(forward);



        panelb.setLayout(new GridLayout(2,1));
        panelb.add(panelba);
        panelb.add(panelbb);

        hi.setLayout(new GridLayout(2,1));

        hi.addComponent(panela);
        hi.addComponent(panelb);

        /*
        forward.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent evt) {
                System.out.println(txtFirst.getText()+txtLast.getText());
                team[x]= new Peep(txtFirst.getText(),txtLast.getText());
                x++;
            }
        });
*/
        /*
        make.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent evt) {
              System.out.println(txtFirst.getText()+txtLast.getText());
              team[x]= new Peep(txtFirst.getText(),txtLast.getText());
              x++;
            }
        });
        */
        back.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent evt) {

                x--;


                System.out.println(team[x].first+team[x].last);
                txtLast.setText(team[x].last);
                txtFirst.setText(team[x].first);
                img.repaint();

            }
        });
        forward.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent evt) {
                int h;
                h=x;
                x++;

                System.out.println(team[x].first+team[x].last);
                txtLast.setText(team[x].last);
                txtFirst.setText(team[x].first);
                img.repaint();
            }
        });



        hi.show();
    }

    public void stop() {
        current = Display.getInstance().getCurrent();
        if(current instanceof Dialog) {
            ((Dialog)current).dispose();
            current = Display.getInstance().getCurrent();
        }
    }
    
    public void destroy() {
    }

}
