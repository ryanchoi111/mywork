package com.Hales.myapp;

import com.codename1.components.InfiniteProgress;
import com.codename1.components.MultiButton;
import com.codename1.contacts.Contact;
import com.codename1.io.Log;
import com.codename1.ui.*;
import com.codename1.ui.layouts.*;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import java.io.IOException;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename One</a> for the purpose 
 * of building native mobile applications using Java.
 */
public class Players {

    private Form current;
    private Resources theme;
    private Label first , last ,img;
    private TextField txtFirst,txtLast;
    private Button forward,back,make;
    private Peep[] team;
    private Container panela,panelb,panelba,panelbb;
    private int x;
    private Image milton;

    public void init(Object context) {
        theme = UIManager.initFirstTheme("/theme");

        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true);

        // Pro only feature, uncomment if you have a pro subscription
        // Log.bindCrashProtection(true);
    }
    
    public void start() {
        if(current != null){
            current.show();
            return;
        }
        Form hi = new Form("Search", BoxLayout.y());
        Toolbar tb = hi.getToolbar();
        Image icon = theme.getImage("icon.png");
        Container topBar = BorderLayout.east(new Label(icon));
        team= new Peep[10];

        panela=new Container();
        panelb=new Container();
        panelba=new Container();
        panelbb=new Container();

        /*
        try {
            milton= Image.createImage("/mpic.jpg");
        } catch (IOException e1) {
            e1.printStackTrace();
        }

        img= new Label("PIC"){
                    @Override
                    public void paint(Graphics g) {
                        // red color
                        //  g.setColor(0xff0000);
                        g.drawImage(milton,this.getX(),this.getY(),this.getWidth(),this.getHeight());
                        g.drawString("Hales", 10,10);

                        // paint the screen in red
                        // g.fillRect(getX(), getY(), 20,20);

                        // draw hi world in white text at the top left corner of the screen
                        //  g.setColor(0xFF9933);
                        if(x>0) {
                            g.drawString(team[0].first, (this.getWidth() / 2) - 20, getY() + this.getHeight() / 2);
                        }
            }
        };

*/

        panela.setLayout(BoxLayout.y());


        panelb.setLayout(new GridLayout(2,1));
        panelb.add(panelba);


        hi.setLayout(new GridLayout(2,1));

        hi.addComponent(panela);
        hi.addComponent(panelb);

        Image duke = null;
        try {
            duke = Image.createImage("/user.png");
        } catch(IOException err) {
            Log.e(err);
        }
        int fiveMM = Display.getInstance().convertToPixels(5);
        final Image finalDuke = duke.scaledWidth(fiveMM);
        Toolbar.setGlobalToolbar(true);
        hi.add(new InfiniteProgress());
        Display.getInstance().scheduleBackgroundTask(()-> {
            // this will take a while...
            Contact[] cnts = Display.getInstance().getAllContacts(true, true, true, true, false, false);
            Display.getInstance().callSerially(() -> {
                hi.removeAll();
                for(Contact c : cnts) {
                    MultiButton m = new MultiButton();
                    m.setTextLine1(c.getDisplayName());
                    m.setTextLine2(c.getPrimaryPhoneNumber());
                    Image pic = c.getPhoto();
                    if(pic != null) {
                        m.setIcon(finalDuke);
                    } else {
                        m.setIcon(finalDuke);
                    }
                    hi.add(m);
                }
                hi.revalidate();
            });
        });

        hi.getToolbar().addSearchCommand(e -> {
            String text = (String)e.getSource();
            if(text == null || text.length() == 0) {
                // clear search
                for(Component cmp : hi.getContentPane()) {
                    cmp.setHidden(false);
                    cmp.setVisible(true);
                }
                hi.getContentPane().animateLayout(150);
            } else {
                text = text.toLowerCase();
                for(Component cmp : hi.getContentPane()) {
                    MultiButton mb = (MultiButton)cmp;
                    String line1 = mb.getTextLine1();
                    String line2 = mb.getTextLine2();
                    boolean show = line1 != null && line1.toLowerCase().indexOf(text) > -1 ||
                            line2 != null && line2.toLowerCase().indexOf(text) > -1;
                    mb.setHidden(!show);
                    mb.setVisible(show);
                }
                hi.getContentPane().animateLayout(150);
            }
        }, 4);


        topBar.add(BorderLayout.SOUTH, new Label("App Name","Sidemenu Tagline"));
        topBar.setUIID("SideCommand");
        tb.addComponentToSideMenu(topBar);

        tb.addMaterialCommandToSideMenu("Home", FontImage.MATERIAL_HOME, e -> {});
        tb.addMaterialCommandToSideMenu("Website", FontImage.MATERIAL_WEB, e ->{});
        tb.addMaterialCommandToSideMenu("Settings", FontImage.MATERIAL_SETTINGS, e ->{});
        tb.addMaterialCommandToSideMenu("About", FontImage.MATERIAL_INFO, e ->{});


        hi.show();
    }

    public void stop() {
        current = Display.getInstance().getCurrent();
        if(current instanceof Dialog) {
            ((Dialog)current).dispose();
            current = Display.getInstance().getCurrent();
        }
    }
    
    public void destroy() {
    }

}
